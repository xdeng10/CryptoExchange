{"version":3,"sources":["components/NavBar/coinLogo.png","components/NavBar/NavBar.js","components/HomePage/HomePage.js","components/About/About.js","components/Contact/Contact.js","components/CryptoMarket/CoinOverview.js","components/CryptoMarket/MarketOverview.js","components/CryptoMarket/CryptoMarket.js","components/CoinPage/CoinInfoSummary.js","components/CoinPage/CoinPage.js","components/Signin/Signin.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","to","src","logo","alt","title","Component","HomePage","Contact","CoinOverview","this","props","image","name","symbol","price","volume","priceChangePercent","marketcap","logoAlt","Number","parseFloat","toFixed","toLocaleString","Loader","viewBox","width","height","stroke","d","fill","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","MarketOverview","state","coins","pageNumber","morePage","prevY","search","order","loading","setState","setLoading","axios","get","then","res","data","setMorePage","setCoins","catch","error","alert","filter","coin","toLowerCase","includes","map","current_price","total_volume","price_change_percentage_24h","market_cap","id","ref","loadingRef","category","setOrder","entities","observer","y","boundingClientRect","setPageNumber","fetchMarketList","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","prevProps","prevState","setPrevY","placeholder","onChange","event","setSearch","target","value","onClick","handleOrder","getFilteredCoins","waitloading","CryptoMarket","CoinInfoSummary","x","toString","replace","coin_market_data","last_updated_data","last_updated","time","Date","getTimezoneOffset","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","priceChange24","price_change_24h_in_currency","cad","priceChange24Perc","convertNumToPrice","convertNumToPerc","price24Low","low_24h","price24High","high_24h","mc24","market_cap_change_24h_in_currency","mc24Perc","market_cap_change_percentage_24h","priceATLow","atl","priceATHigh","ath","marketCap","totalVolume","circSupply","circulating_supply","totalSupply","total_supply","currency","getTimeZone","getCoinLastUpdate","getCoinPriceChange","getCoin24LowHigh","getCoin24mc","getCoinATLowHigh","getCoinMarketcap","getCoinTotalVolume","getCoinCircSupply","getCoinTotalSupply","coinID","setCoin","console","log","setCoin_market_data","market_data","toUpperCase","fetchCoinInfo","large","getCoinLogoAlt","getCoinSymbol","getPriceChange24","getCoinCurrPrice","Signin","App","path","exact","component","CoinPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dbb4c3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/coinLogo.0662a067.png\";","import React, { Component } from 'react';\r\nimport './NavBar.css';\r\nimport logo from './coinLogo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav-container\">\r\n                <Link className=\"logo-container\" to=\"/Home\">\r\n                    <div className='logo-table'>\r\n                        <img src={logo} className=\"logo-image\" alt=\"Logo\" />\r\n                        <span className=\"company-name\">Crytoexchange</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                <div className=\"menu-container v-mid w-80 tr\">\r\n                    <Link className=\"page-name\" to=\"/CryptoMarket\" title=\"CryptoMarket\">Crypto Market</Link>\r\n                    <Link className=\"page-name\" to=\"/About\" title=\"About\">About us</Link>\r\n                    <Link className=\"page-name\" to=\"/Contact\" title=\"Contact\">Contact</Link>\r\n\r\n                    <Link className=\"page-name signin-button\" to=\"/Signin\" title=\"Signin\">Sign in</Link>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport './HomePage.css';\r\n\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <main>\r\n            <h1>HomePage</h1>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport './About.css';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <h1>About Us</h1>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport './Contact.css';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <h1>Contact Us</h1>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport './MarketOverview';\r\n\r\nclass CoinOverview extends Component {\r\n\r\n    render() {\r\n        const { image, name, symbol, price, volume, priceChangePercent, marketcap } = this.props;\r\n        const logoAlt = name + \" logo\";\r\n\r\n        return (\r\n            <div className='coin-row'>\r\n                <div className=\"coin-logo\">\r\n                    <img src={image} alt={logoAlt} />\r\n                </div>\r\n                <div className=\"coin-name\">\r\n                    <h3>{name}</h3>\r\n                </div>\r\n                <div className=\"coin-sym\">\r\n                    <p>{symbol}</p>\r\n                </div>\r\n\r\n                <div className=\"coin-price\">\r\n                    <p>${Number.parseFloat(price).toFixed(2)}</p>\r\n                </div>\r\n                <div className=\"coin-volume\">\r\n                    <p>{(volume) ? volume.toLocaleString() : \"-\"}</p>\r\n                </div>\r\n                <div className=\"coin-change\">\r\n                    <p className={priceChangePercent >= 0 ? 'price-green' : 'price-red'}>\r\n                        {(priceChangePercent) ? `${Number.parseFloat(priceChangePercent).toFixed(2)}%`:\"-\"}\r\n                    </p>\r\n                </div>\r\n                <div className=\"coin-market-cap\">\r\n                    <p>{(marketcap) ? `$${marketcap.toLocaleString()}` : \"-\"}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CoinOverview;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './MarketOverview.css';\r\nimport CoinOverview from './CoinOverview';\r\n\r\n/* Loading circle image */\r\nconst Loader = () => (\r\n    <div className=\"divLoader\">\r\n        <svg className=\"svgLoader\" viewBox=\"0 0 100 100\" width=\"2em\" height=\"2em\">\r\n            <path stroke=\"none\" d=\"M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50\" fill=\"#51CACC\" transform=\"rotate(179.719 50 51)\"><animateTransform attributeName=\"transform\" type=\"rotate\" calcMode=\"linear\" values=\"0 50 51;360 50 51\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animateTransform></path>\r\n        </svg>\r\n    </div>\r\n);\r\n\r\n\r\n\r\nclass MarketOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coins: [],\r\n            pageNumber: 1,\r\n            morePage: true,\r\n            prevY: 0,\r\n            search: '',\r\n            order: 'market_cap_desc',\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    setCoins(coins) {\r\n        this.setState({ coins: coins });\r\n    }\r\n    setPageNumber(pageNumber) {\r\n        this.setState({ pageNumber: pageNumber });\r\n    }\r\n    setMorePage(morePage) {\r\n        this.setState({ morePage: morePage });\r\n    }\r\n    setPrevY(prevY) {\r\n        this.setState({ prevY: prevY });\r\n    }\r\n    setSearch(search) {\r\n        this.setState({ search: search });\r\n    }\r\n    setOrder(order) {\r\n        this.setState({ order: order });\r\n    }\r\n    setLoading(loading) {\r\n        this.setState({ loading: loading });\r\n    }\r\n\r\n    fetchMarketList() {\r\n        this.setLoading(true);\r\n        axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=cad&order=${this.state.order}&per_page=10&page=${this.state.pageNumber}&sparkline=false`)\r\n            .then(res => {\r\n                if (res.data === []) {\r\n                    this.setMorePage(false);\r\n                }\r\n                this.setCoins([...this.state.coins, ...res.data]);\r\n                this.setLoading(false);\r\n            }).catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    getFilteredCoins() {\r\n        return this.state.coins.filter(coin => {\r\n            return coin.name.toLowerCase().includes(this.state.search.toLowerCase())\r\n        }).map(coin => {\r\n            return (\r\n                <CoinOverview key={coin.id}\r\n                    name={coin.name}\r\n                    image={coin.image}\r\n                    price={coin.current_price}\r\n                    symbol={coin.symbol}\r\n                    volume={coin.total_volume}\r\n                    priceChangePercent={coin.price_change_percentage_24h}\r\n                    marketcap={coin.market_cap} />\r\n            );\r\n        });\r\n    }\r\n\r\n    waitloading() {\r\n        return (\r\n            (this.state.loading) ?\r\n                (\r\n                    <div\r\n                        className='coin-row'\r\n                        ref={loadingRef => (this.loadingRef = loadingRef)}\r\n                    >\r\n                        <div className=\"coin-logo\"><Loader /></div>\r\n                        <div className=\"coin-name\"><Loader /></div>\r\n                        <div className=\"coin-sym\"><Loader /></div>\r\n                        <div className=\"coin-price\"><Loader /></div>\r\n                        <div className=\"coin-volume\"><Loader /></div>\r\n                        <div className=\"coin-change\"><Loader /></div>\r\n                        <div className=\"coin-market-cap\"><Loader /></div>\r\n                    </div>\r\n                )\r\n                :\r\n                (\r\n                    <div\r\n                        className='coin-row'\r\n                        ref={loadingRef => (this.loadingRef = loadingRef)}\r\n                    >\r\n                        <div className=\"coin-logo\"></div>\r\n                        <div className=\"coin-name\"></div>\r\n                        <div className=\"coin-sym\"></div>\r\n                        <div className=\"coin-price\"></div>\r\n                        <div className=\"coin-volume\"></div>\r\n                        <div className=\"coin-change\"></div>\r\n                        <div className=\"coin-market-cap\"></div>\r\n                    </div>\r\n                )\r\n        );\r\n    }\r\n\r\n\r\n    handleOrder(category) {\r\n        switch (category) {\r\n            case 'market-cap':\r\n                this.setOrder((this.state.order === 'market_cap_desc') ? 'market_cap_asc' : 'market_cap_desc');\r\n                break;\r\n            case 'volume':\r\n                this.setOrder((this.state.order === 'volume_desc') ? 'volume_asc' : 'volume_desc');\r\n                break;\r\n            default:\r\n                this.setOrder('market_cap_asc');\r\n        };\r\n    }\r\n\r\n\r\n    handleObserver(entities, observer) {\r\n        const y = entities[0].boundingClientRect.y;\r\n        if (this.state.prevY > y) {\r\n            this.setPageNumber(this.state.pageNumber + 1);\r\n            this.fetchMarketList();\r\n        }\r\n        this.setState({ prevY: y });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchMarketList();\r\n\r\n        if (this.state.morePage) {\r\n            var options = {\r\n                root: null,\r\n                rootMargin: \"0px\",\r\n                threshold: 1.0\r\n            };\r\n\r\n            this.observer = new IntersectionObserver( //Listen to changes in target elements\r\n                this.handleObserver.bind(this),\r\n                options\r\n            );\r\n            this.observer.observe(this.loadingRef);\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.order !== prevState.order) {\r\n            this.setCoins([]);\r\n            this.setPageNumber(1);\r\n            this.setPrevY(0);\r\n            this.fetchMarketList();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>CryptoMarket</h1>\r\n                    <form className='search-bar-form'>\r\n                        <input\r\n                            className='search-bar'\r\n                            type=\"text\"\r\n                            placeholder=\" Search a currency\"\r\n                            onChange={(event) => this.setSearch(event.target.value)}\r\n                        />\r\n                    </form>\r\n                </div>\r\n                <div className=\"market-container\">\r\n                    <div className=\"market-table\">\r\n                        <div className='coin-row coin-heading'>\r\n                            <div className=\"coin-logo\"></div>\r\n                            <div className=\"coin-name\"><h3>Name</h3></div>\r\n                            <div className=\"coin-sym\"><p>SYM</p></div>\r\n                            <div className=\"coin-price\"><p>Price</p></div>\r\n                            <div className=\"coin-volume cursor-pointer\"\r\n                                onClick={() => this.handleOrder(\"volume\")}>\r\n                                <p>Volume &#8597;</p>\r\n                            </div>\r\n                            <div className=\"coin-change\"><p>Change(24h)</p></div>\r\n                            <div className=\"coin-market-cap cursor-pointer\"\r\n                                onClick={() => this.handleOrder(\"market-cap\")}>\r\n                                <p>Market Cap &#8597;</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {this.getFilteredCoins()}\r\n\r\n                        {this.waitloading()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MarketOverview;\r\n\r\n","import React, { Component } from 'react';\r\nimport './CryptoMarket.css';\r\nimport MarketOverview from './MarketOverview';\r\n\r\n\r\nclass CryptoMarket extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <MarketOverview />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CryptoMarket;\r\n","import React, { Component } from 'react';\r\nimport './CoinInfoSummary.css';\r\nimport './CoinPage';\r\n\r\n\r\nclass CoinInfoSummary extends Component {\r\n\r\n    convertNumToPrice(x) {\r\n        return Number.parseFloat(x).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    convertNumToPerc(x) {\r\n        return Number.parseFloat(x).toFixed(2);\r\n    }\r\n\r\n    getTimeZone(coin_market_data) {\r\n        let last_updated_data = coin_market_data.last_updated && coin_market_data.last_updated.toLocaleString();\r\n        let time = new Date(last_updated_data);\r\n        return ` (GMT${time.getTimezoneOffset() / (-60)})`;\r\n    }\r\n\r\n    getCoinLastUpdate(coin_market_data) {\r\n        let last_updated_data = coin_market_data.last_updated && coin_market_data.last_updated.toLocaleString();\r\n        let time = new Date(last_updated_data);\r\n        return <span>{time.getFullYear()}/{time.getMonth()}/{time.getDate()} <br /> {time.getHours()}:{time.getMinutes()}:{time.getSeconds()}</span>;\r\n    }\r\n\r\n    getCoinPriceChange(coin_market_data) {\r\n        let priceChange24 = coin_market_data.price_change_24h_in_currency && coin_market_data.price_change_24h_in_currency.cad;\r\n        let priceChange24Perc = coin_market_data.price_change_percentage_24h;\r\n\r\n        if (priceChange24 && priceChange24Perc) {\r\n            return <span className={priceChange24 >= 0 ? 'price-green' : 'price-red'}>{this.convertNumToPrice(priceChange24)}$ <br /> {this.convertNumToPerc(priceChange24Perc)}%</span>;\r\n        } else {\r\n            return <span> - <br /> -</span>;\r\n        }\r\n    }\r\n\r\n    getCoin24LowHigh(coin_market_data) {\r\n        let price24Low = coin_market_data.low_24h && coin_market_data.low_24h.cad;\r\n        let price24High = coin_market_data.high_24h && coin_market_data.high_24h.cad;\r\n        return <span>{price24Low ? this.convertNumToPrice(price24Low) + \"$\" : \"-\"} <br /> {price24High ? this.convertNumToPrice(price24High) + \"$\" : \"-\"}</span>\r\n    }\r\n\r\n    getCoin24mc(coin_market_data) {\r\n        let mc24 = coin_market_data.market_cap_change_24h_in_currency && coin_market_data.market_cap_change_24h_in_currency.cad;\r\n        let mc24Perc = coin_market_data.market_cap_change_percentage_24h;\r\n\r\n        if (mc24 && mc24Perc) {\r\n            return <span className={mc24 >= 0 ? 'price-green' : 'price-red'}> {this.convertNumToPrice(mc24)}$ <br /> {this.convertNumToPerc(mc24Perc)}%</span>;\r\n        } else {\r\n            return <span> - <br /> - </span>;\r\n        }\r\n    }\r\n\r\n    getCoinATLowHigh(coin_market_data) {\r\n        let priceATLow = coin_market_data.atl && coin_market_data.atl.cad;\r\n        let priceATHigh = coin_market_data.ath && coin_market_data.ath.cad;\r\n        return <span>{priceATLow ? this.convertNumToPrice(priceATLow) + \"$\" : \"-\"} <br /> {priceATHigh ? this.convertNumToPrice(priceATHigh) + \"$\" : \"-\"}</span>\r\n    }\r\n\r\n    getCoinMarketcap(coin_market_data) {\r\n        let marketCap = coin_market_data.market_cap && coin_market_data.market_cap.cad;\r\n        return <span>{marketCap ? this.convertNumToPrice(marketCap) + \"$\" : \"-\"}</span>;\r\n    }\r\n\r\n    getCoinTotalVolume(coin_market_data) {\r\n        let totalVolume = coin_market_data.total_volume && coin_market_data.total_volume.cad;\r\n        return <span>{totalVolume ? this.convertNumToPrice(totalVolume) + \"$\" : \"-\"}</span>;\r\n    }\r\n\r\n\r\n    getCoinCircSupply(coin_market_data) {\r\n        let circSupply = coin_market_data.circulating_supply && coin_market_data.circulating_supply.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        return <span>{circSupply ? circSupply : \"-\"}</span>;\r\n    }\r\n\r\n    getCoinTotalSupply(coin_market_data) {\r\n        let totalSupply = coin_market_data.total_supply && coin_market_data.total_supply.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        return <span>{totalSupply ? totalSupply : \"-\"}</span>;\r\n    }\r\n\r\n    render() {\r\n        const { currency, coin_market_data } = this.props;\r\n\r\n\r\n        return (\r\n            <table className=\"coin-info-summary\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Last Updated {this.getTimeZone(coin_market_data)}</td>\r\n                        <td>{this.getCoinLastUpdate(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>24h Price Change</td>\r\n                        <td>{this.getCoinPriceChange(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>24h Low/High</td>\r\n                        <td>{this.getCoin24LowHigh(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>24h Market Cap</td>\r\n                        <td>{this.getCoin24mc(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>All-Time Low/High</td>\r\n                        <td>{this.getCoinATLowHigh(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Market Cap</td>\r\n                        <td>{this.getCoinMarketcap(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Total Volume</td>\r\n                        <td>{this.getCoinTotalVolume(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Circulating Supply Supply</td>\r\n                        <td>{this.getCoinCircSupply(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Total Supply</td>\r\n                        <td>{this.getCoinTotalSupply(coin_market_data)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoinInfoSummary;\r\n\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './CoinPage.css';\r\nimport CoinInfoSummary from './CoinInfoSummary';\r\n\r\n\r\n\r\nclass MarketOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coinID: 'bitcoin',\r\n            currency: 'cad',\r\n            coin: {},\r\n            coin_market_data: {},\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    setCoinID(coinID) {\r\n        this.setState({ coinID: coinID });\r\n    }\r\n    setCurrency(currency) {\r\n        this.setState({ currency: currency });\r\n    }\r\n    setCoin(coin) {\r\n        this.setState({ coin: coin });\r\n    }\r\n    setCoin_market_data(coin_market_data) {\r\n        this.setState({ coin_market_data: coin_market_data });\r\n    }\r\n    setLoading(loading) {\r\n        this.setState({ loading: loading });\r\n    }\r\n\r\n    fetchCoinInfo() {\r\n        this.setLoading(true);\r\n        axios.get(`https://api.coingecko.com/api/v3/coins/${this.state.coinID}?tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=true`)\r\n            .then(res => {\r\n                this.setCoin(res.data);\r\n                console.log(this.state.coin);\r\n                this.setCoin_market_data(this.state.coin.market_data)\r\n                this.setLoading(false);\r\n            }).catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    convertNumToPrice(x) {\r\n        return Number.parseFloat(x).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    convertNumToPerc(x) {\r\n        return Number.parseFloat(x).toFixed(2);\r\n    }\r\n    \r\n    getCoinLogoAlt() {\r\n        return this.state.coin.name + \" Logo\";\r\n    }\r\n\r\n    getCoinSymbol() {\r\n        return this.state.coin.symbol && this.state.coin.symbol.toUpperCase();\r\n    }\r\n\r\n    getCoinCurrPrice() {\r\n        return this.state.coin_market_data.current_price &&\r\n            this.state.coin_market_data.current_price.cad &&\r\n            this.convertNumToPrice(this.state.coin_market_data.current_price.cad);\r\n    }\r\n\r\n    getPriceChange24() {\r\n        let priceChange24 = this.state.coin_market_data.price_change_24h_in_currency && this.state.coin_market_data.price_change_24h_in_currency.cad;\r\n        let priceChange24Perc = this.state.coin_market_data.price_change_percentage_24h;\r\n\r\n        if (priceChange24 && priceChange24Perc) {\r\n            return <span className={priceChange24 >= 0 ? 'coin-price-change price-green' : 'coin-price-change price-red'}> {this.convertNumToPerc(priceChange24Perc)}%</span>;\r\n        } else {\r\n            return <span className=\"coin-price-change\"> - </span>;\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchCoinInfo();\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.order !== prevState.order) {\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                <div className=\"coin-header-container\">\r\n                    <div className=\"coin-header\">\r\n                        <div className=\"coin-title\">\r\n                            <img className=\"coin-logo\" src={this.state.coin.image && this.state.coin.image.large} alt={this.getCoinLogoAlt()} />\r\n                            <span className=\"coin-name\">{this.state.coin.name}</span>\r\n                            <span className=\"coin-symbol\">{this.getCoinSymbol()}</span>\r\n                            {this.getPriceChange24()}\r\n                        </div>\r\n                        <div>\r\n                            Add to Watchlist\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"coin-subheader-container\">\r\n                    <div className=\"coin-subheader\">\r\n                        <span className=\"coin-currency\">CA</span>\r\n                        <span className=\"coin-price\"> {this.getCoinCurrPrice()}$</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"coin-info-container\">\r\n                    <div className=\"coin-info\">\r\n                        <CoinInfoSummary \r\n                            currency = {this.state.currency}\r\n                            coin_market_data = {this.state.coin_market_data}\r\n                        />\r\n\r\n                        <div className=\"coin-info-graph\">\r\n                            sff\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MarketOverview;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './Signin.css';\r\n\r\nclass Signin extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <h1>Signin</h1>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar/NavBar';\nimport HomePage from './components/HomePage/HomePage';\nimport About from './components/About/About';\nimport Contact from './components/Contact/Contact';\nimport CryptoMarket from './components/CryptoMarket/CryptoMarket';\nimport CoinPage from './components/CoinPage/CoinPage';\nimport Signin from './components/Signin/Signin';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact component={CryptoMarket}></Route>\n            <Route path=\"/Home\" component={HomePage}></Route>\n            <Route path=\"/About\" component={About}></Route>\n            <Route path=\"/Contact\" component={Contact}></Route>\n            <Route path=\"/CryptoMarket\" component={CryptoMarket}></Route>\n            <Route path=\"/CoinPage\" component={CoinPage}></Route>\n            <Route path=\"/Signin\" component={Signin}></Route>\n\n          </Switch>\n        </div>\n      </Router>\n\n    );\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}