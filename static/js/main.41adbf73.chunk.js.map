{"version":3,"sources":["components/NavBar/coinLogo.png","components/NavBar/NavBar.js","components/HomePage/HomePage.js","components/About/About.js","components/Contact/Contact.js","components/CryptoMarket/CoinOverview.js","components/CryptoMarket/MarketOverview.js","components/CryptoMarket/CryptoMarket.js","components/CoinPage/CoinInfoSummary.js","components/CoinPage/three-dots.svg","components/CoinPage/HistoryChart.js","components/CoinPage/CoinChart.js","components/CoinPage/CoinPage.js","components/Signin/Signin.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","to","src","logo","alt","title","Component","HomePage","Contact","CoinOverview","this","props","id","name","image","symbol","price","volume","priceChangePercent","marketcap","logoAlt","Number","parseFloat","toFixed","toLocaleString","Loader","viewBox","width","height","stroke","d","fill","transform","attributeName","type","calcMode","values","keyTimes","dur","begin","repeatCount","MarketOverview","state","coins","pageNumber","morePage","prevY","search","order","loading","setState","setLoading","axios","get","then","res","data","setMorePage","setCoins","catch","error","alert","filter","coin","toLowerCase","includes","map","current_price","total_volume","price_change_percentage_24h","market_cap","category","setOrder","entities","observer","y","boundingClientRect","setPageNumber","fetchMarketList","setPrevY","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","loadingRef","prevProps","prevState","placeholder","onChange","event","setSearch","target","value","onClick","handleOrder","getFilteredCoins","waitloading","ref","CryptoMarket","CoinInfoSummary","x","toString","replace","coin_market_data","last_updated_data","last_updated","time","Date","getTimezoneOffset","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","priceChange24","price_change_24h_in_currency","cad","priceChange24Perc","incDecArrow","convertNumToPrice","convertNumToPerc","price24Low","low_24h","price24High","high_24h","mc24","market_cap_change_24h_in_currency","mc24Perc","market_cap_change_percentage_24h","priceATLow","atl","priceATHigh","ath","marketCap","totalVolume","circSupply","circulating_supply","totalSupply","total_supply","currency","getCoinPriceChange","getCoin24LowHigh","getCoin24mc","getCoinATLowHigh","getCoinMarketcap","getCoinTotalVolume","getCoinCircSupply","getCoinTotalSupply","getTimeZone","getCoinLastUpdate","HistoryChart","chartRef","React","createRef","el","Math","max","chartPriceData","total_volumes","prices","min","myChart","Chart","current","labels","getTimeData","datasets","label","getValueData","backgroundColor","fluctuationColor","borderColor","borderWidth","pointRadius","pointHitRadius","pointHoverRadius","pointHoverBorderColor","pointHoverBorderWidth","pointHoverBackgroundColor","hoverBackgroundColor","yAxisID","barThickness","barPercentage","options","scales","ticks","maxTicksLimit","grid","display","unit","timeUnit","callback","index","suggestedMin","getPriceYMin","getPriceYMax","suggestedMax","position","getVolumeYMax","lineHeightAnnotation","always","hover","lineWeight","animation","duration","maintainAspectRatio","responsive","plugins","legend","tooltip","caretSize","callbacks","context","parsed","interaction","mode","intersect","register","registerables","createHistoryChart","destroy","CoinChart","coinID","coinChartData1d","coinChartData1w","coinChartData1m","coinChartData1y","coinChartDataMax","timeInterval","chartLoading","data1d","data1w","data1m","data1y","dataMax","setChartLoading","requestChart1d","requestChart1w","requestChart1m","requestChart1y","requestChartMax","all","setCoinChartData","ThreeDots","interval","intervalPerc","price_change_percentage_7d_in_currency","price_change_percentage_7d","price_change_percentage_30d_in_currency","price_change_percentage_30d","price_change_percentage_1y_in_currency","price_change_percentage_1y","priceChange","priceChangePerc","fetchCoinChart","waitChartLoading","setTimeInterval","getIntervalChartData","getFluctuationColor","getTimeUnit","CoinPage","setCoin","setCoin_market_data","market_data","toUpperCase","setCoinID","match","params","cryptoid","fetchCoinInfo","large","getCoinLogoAlt","getCoinSymbol","getPriceChange24","getCoinCurrPrice","withRouter","Signin","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41adbf73.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/coinLogo.0662a067.png\";","import React, { Component } from 'react';\r\nimport './NavBar.css';\r\nimport logo from './coinLogo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav-container\">\r\n                <Link className=\"logo-container\" to=\"/home\">\r\n                    <div className='logo-table'>\r\n                        <img src={logo} className=\"logo-image\" alt=\"Logo\" />\r\n                        <span className=\"company-name\">Crytoexchange</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                <div className=\"menu-container v-mid w-80 tr\">\r\n                    <Link className=\"page-name\" to=\"/cryptomarket\" title=\"CryptoMarket\">Crypto Market</Link>\r\n                    <Link className=\"page-name\" to=\"/about\" title=\"About\">About us</Link>\r\n                    <Link className=\"page-name\" to=\"/contact\" title=\"Contact\">Contact</Link>\r\n\r\n                    <Link className=\"page-name signin-button\" to=\"/Signin\" title=\"signin\">Sign in</Link>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport './HomePage.css';\r\n\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <main>\r\n            <h1>HomePage</h1>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport './About.css';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <h1>About Us</h1>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport './Contact.css';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <h1>Contact Us</h1>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport './MarketOverview';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass CoinOverview extends Component {\r\n\r\n    render() {\r\n        const { id, name, image, symbol, price, volume, priceChangePercent, marketcap } = this.props;\r\n        const logoAlt = name + \" logo\";\r\n\r\n        return (\r\n            <div className='coin-row'>\r\n                <div className=\"coin-logo\">\r\n                    <img src={image} alt={logoAlt} />\r\n                </div>\r\n                <Link className=\"coin-name\" to={`/coin/${id}`}>\r\n                    <h3>{name}</h3>\r\n                </Link>\r\n                <div className=\"coin-sym\">\r\n                    <p>{symbol}</p>\r\n                </div>\r\n\r\n                <div className=\"coin-price\">\r\n                    <p>{(price) ? `${Number.parseFloat(price).toFixed(2)}` : \"NaN\"}</p>\r\n                </div>\r\n                <div className=\"coin-change\">\r\n                    <p className={priceChangePercent >= 0 ? 'price-green' : 'price-red'}>\r\n                        {(priceChangePercent) ? `${Number.parseFloat(priceChangePercent).toFixed(2)}%`:\"-\"}\r\n                    </p>\r\n                </div>\r\n                <div className=\"coin-volume\">\r\n                    <p>{(volume) ? volume.toLocaleString() : \"-\"}</p>\r\n                </div>\r\n\r\n                <div className=\"coin-market-cap\">\r\n                    <p>{(marketcap) ? `$${marketcap.toLocaleString()}` : \"-\"}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CoinOverview;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './MarketOverview.css';\r\nimport CoinOverview from './CoinOverview';\r\n\r\n/* Loading circle image */\r\nconst Loader = () => (\r\n    <div className=\"divLoader\">\r\n        <svg className=\"svgLoader\" viewBox=\"0 0 100 100\" width=\"2em\" height=\"2em\">\r\n            <path stroke=\"none\" d=\"M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50\" fill=\"#51CACC\" transform=\"rotate(179.719 50 51)\"><animateTransform attributeName=\"transform\" type=\"rotate\" calcMode=\"linear\" values=\"0 50 51;360 50 51\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animateTransform></path>\r\n        </svg>\r\n    </div>\r\n);\r\n\r\n\r\n\r\nclass MarketOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coins: [],\r\n            pageNumber: 1,\r\n            morePage: true,\r\n            prevY: 0,\r\n            search: '',\r\n            order: 'market_cap_desc',\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    setCoins(coins) {\r\n        this.setState({ coins: coins });\r\n    }\r\n    setPageNumber(pageNumber) {\r\n        this.setState({ pageNumber: pageNumber });\r\n    }\r\n    setMorePage(morePage) {\r\n        this.setState({ morePage: morePage });\r\n    }\r\n    setPrevY(prevY) {\r\n        this.setState({ prevY: prevY });\r\n    }\r\n    setSearch(search) {\r\n        this.setState({ search: search });\r\n    }\r\n    setOrder(order) {\r\n        this.setState({ order: order });\r\n    }\r\n    setLoading(loading) {\r\n        this.setState({ loading: loading });\r\n    }\r\n\r\n    fetchMarketList() {\r\n        this.setLoading(true);\r\n        axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=cad&order=${this.state.order}&per_page=25&page=${this.state.pageNumber}&sparkline=false`)\r\n            .then(res => {\r\n                if (res.data === []) {\r\n                    this.setMorePage(false);\r\n                }\r\n                this.setCoins([...this.state.coins, ...res.data]);\r\n                this.setLoading(false);\r\n            }).catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    getFilteredCoins() {\r\n        return this.state.coins.filter(coin => {\r\n            return coin.name.toLowerCase().includes(this.state.search.toLowerCase())\r\n        }).map(coin => {\r\n            return (\r\n                <CoinOverview key={coin.id}\r\n                    id={coin.id}\r\n                    name={coin.name}\r\n                    image={coin.image}\r\n                    price={coin.current_price}\r\n                    symbol={coin.symbol}\r\n                    volume={coin.total_volume}\r\n                    priceChangePercent={coin.price_change_percentage_24h}\r\n                    marketcap={coin.market_cap} />\r\n            );\r\n        });\r\n    }\r\n\r\n    waitloading() {\r\n        return (\r\n            (this.state.loading) ?\r\n                (\r\n                    <div\r\n                        className='coin-row'\r\n                    >\r\n                        <div className=\"coin-logo\"><Loader /></div>\r\n                        <div className=\"coin-name\"><Loader /></div>\r\n                        <div className=\"coin-sym\"><Loader /></div>\r\n                        <div className=\"coin-price\"><Loader /></div>\r\n                        <div className=\"coin-volume\"><Loader /></div>\r\n                        <div className=\"coin-change\"><Loader /></div>\r\n                        <div className=\"coin-market-cap\"><Loader /></div>\r\n                    </div>\r\n                )\r\n                :\r\n                (\r\n                    <div\r\n                        className='coin-row'\r\n                    >\r\n                        <div className=\"coin-logo\"></div>\r\n                        <div className=\"coin-name\"></div>\r\n                        <div className=\"coin-sym\"></div>\r\n                        <div className=\"coin-price\"></div>\r\n                        <div className=\"coin-volume\"></div>\r\n                        <div className=\"coin-change\"></div>\r\n                        <div className=\"coin-market-cap\"></div>\r\n                    </div>\r\n                )\r\n        );\r\n    }\r\n\r\n\r\n    handleOrder(category) {\r\n        switch (category) {\r\n            case 'market-cap':\r\n                this.setOrder((this.state.order === 'market_cap_desc') ? 'market_cap_asc' : 'market_cap_desc');\r\n                break;\r\n            case 'volume':\r\n                this.setOrder((this.state.order === 'volume_desc') ? 'volume_asc' : 'volume_desc');\r\n                break;\r\n            default:\r\n                this.setOrder('market_cap_asc');\r\n        };\r\n    }\r\n\r\n\r\n    handleObserver(entities, observer) {\r\n        const y = entities[0].boundingClientRect.y;\r\n        if (this.state.prevY > y) {\r\n            this.setPageNumber(this.state.pageNumber + 1);\r\n            this.fetchMarketList();\r\n        }\r\n        this.setPrevY(y);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchMarketList();\r\n\r\n        if (this.state.morePage) {\r\n            var options = {\r\n                root: null,\r\n                rootMargin: \"0px\",\r\n                threshold: 1.0\r\n            };\r\n\r\n            this.observer = new IntersectionObserver( //Listen to changes in target elements\r\n                this.handleObserver.bind(this),\r\n                options\r\n            );\r\n            this.observer.observe(this.loadingRef);\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.order !== prevState.order) {\r\n            this.setCoins([]);\r\n            this.setPageNumber(1);\r\n            this.setPrevY(0);\r\n            this.fetchMarketList();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>CryptoMarket</h1>\r\n                    <form className='search-bar-form'>\r\n                        <input\r\n                            className='search-bar'\r\n                            type=\"text\"\r\n                            placeholder=\" Search a currency\"\r\n                            onChange={(event) => this.setSearch(event.target.value)}\r\n                        />\r\n                    </form>\r\n                </div>\r\n                <div className=\"market-container\">\r\n                    <div className=\"market-table\">\r\n                        <div className='coin-row coin-heading'>\r\n                            <div className=\"coin-logo\"></div>\r\n                            <div className=\"coin-name\"><h3>Name</h3></div>\r\n                            <div className=\"coin-sym\"><p>SYM</p></div>\r\n                            <div className=\"coin-price\"><p>Price</p></div>\r\n                            <div className=\"coin-change\"><p>Change(24h)</p></div>\r\n                            <div className=\"coin-volume cursor-pointer\"\r\n                                onClick={() => this.handleOrder(\"volume\")}>\r\n                                <p>Volume &#8597;</p>\r\n                            </div>\r\n                            <div className=\"coin-market-cap cursor-pointer\"\r\n                                onClick={() => this.handleOrder(\"market-cap\")}>\r\n                                <p>Market Cap &#8597;</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {this.getFilteredCoins()}\r\n\r\n                        {this.waitloading()}\r\n\r\n                        <div\r\n                            ref={loadingRef => (this.loadingRef = loadingRef)}\r\n                        >\r\n                            <span>&nbsp;</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MarketOverview;\r\n\r\n","import React, { Component } from 'react';\r\nimport './CryptoMarket.css';\r\nimport MarketOverview from './MarketOverview';\r\n\r\n\r\nclass CryptoMarket extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <MarketOverview />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CryptoMarket;\r\n","import React, { Component } from 'react';\r\nimport './CoinInfoSummary.css';\r\nimport './CoinPage';\r\n\r\n\r\nclass CoinInfoSummary extends Component {\r\n\r\n    convertNumToPrice(x) {\r\n        return Number.parseFloat(x).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    convertNumToPerc(x) {\r\n        return Number.parseFloat(x).toFixed(2);\r\n    }\r\n\r\n    incDecArrow(x) {\r\n        if (x >= 0) {\r\n            return <span>&#9650;</span>;\r\n        } else {\r\n            return <span>&#9660;</span>;\r\n        }\r\n    }\r\n\r\n    getTimeZone(coin_market_data) {\r\n        let last_updated_data = coin_market_data.last_updated && coin_market_data.last_updated.toLocaleString();\r\n        let time = new Date(last_updated_data);\r\n        return ` (GMT${time.getTimezoneOffset() / (-60)})`;\r\n    }\r\n\r\n    getCoinLastUpdate(coin_market_data) {\r\n        let last_updated_data = coin_market_data.last_updated && coin_market_data.last_updated.toLocaleString();\r\n        let time = new Date(last_updated_data);\r\n        return <span>{time.getFullYear()}/{time.getMonth()}/{time.getDate()} <br /> {time.getHours()}:{time.getMinutes()}:{time.getSeconds()}</span>;\r\n    }\r\n\r\n    getCoinPriceChange(coin_market_data) {\r\n        let priceChange24 = coin_market_data.price_change_24h_in_currency && coin_market_data.price_change_24h_in_currency.cad;\r\n        let priceChange24Perc = coin_market_data.price_change_percentage_24h;\r\n\r\n        if (priceChange24 && priceChange24Perc) {\r\n            return <span className={priceChange24 >= 0 ? 'price-green' : 'price-red'}>\r\n                {this.incDecArrow(priceChange24)} {this.convertNumToPrice(priceChange24)}$\r\n                    <br />\r\n                {this.incDecArrow(priceChange24Perc)} {this.convertNumToPerc(priceChange24Perc)}%\r\n                </span>;\r\n        } else {\r\n            return <span> - <br /> -</span>;\r\n        }\r\n    }\r\n\r\n    getCoin24LowHigh(coin_market_data) {\r\n        let price24Low = coin_market_data.low_24h && coin_market_data.low_24h.cad;\r\n        let price24High = coin_market_data.high_24h && coin_market_data.high_24h.cad;\r\n        return <span>{price24Low ? this.convertNumToPrice(price24Low) + \"$\" : \"-\"} <br /> {price24High ? this.convertNumToPrice(price24High) + \"$\" : \"-\"}</span>\r\n    }\r\n\r\n    getCoin24mc(coin_market_data) {\r\n        let mc24 = coin_market_data.market_cap_change_24h_in_currency && coin_market_data.market_cap_change_24h_in_currency.cad;\r\n        let mc24Perc = coin_market_data.market_cap_change_percentage_24h;\r\n\r\n        if (mc24 && mc24Perc) {\r\n            return <span className={mc24 >= 0 ? 'price-green' : 'price-red'}>\r\n                {this.incDecArrow(mc24)} {this.convertNumToPrice(mc24)}$\r\n                    <br />\r\n                {this.incDecArrow(mc24Perc)} {this.convertNumToPerc(mc24Perc)}%\r\n                    </span>;\r\n        } else {\r\n            return <span> - <br /> - </span>;\r\n        }\r\n    }\r\n\r\n    getCoinATLowHigh(coin_market_data) {\r\n        let priceATLow = coin_market_data.atl && coin_market_data.atl.cad;\r\n        let priceATHigh = coin_market_data.ath && coin_market_data.ath.cad;\r\n        return <span>{priceATLow ? this.convertNumToPrice(priceATLow) + \"$\" : \"-\"} <br /> {priceATHigh ? this.convertNumToPrice(priceATHigh) + \"$\" : \"-\"}</span>\r\n    }\r\n\r\n    getCoinMarketcap(coin_market_data) {\r\n        let marketCap = coin_market_data.market_cap && coin_market_data.market_cap.cad;\r\n        return <span>{marketCap ? this.convertNumToPrice(marketCap) + \"$\" : \"-\"}</span>;\r\n    }\r\n\r\n    getCoinTotalVolume(coin_market_data) {\r\n        let totalVolume = coin_market_data.total_volume && coin_market_data.total_volume.cad;\r\n        return <span>{totalVolume ? this.convertNumToPrice(totalVolume) + \"$\" : \"-\"}</span>;\r\n    }\r\n\r\n\r\n    getCoinCircSupply(coin_market_data) {\r\n        let circSupply = coin_market_data.circulating_supply && coin_market_data.circulating_supply.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        return <span>{circSupply ? circSupply : \"-\"}</span>;\r\n    }\r\n\r\n    getCoinTotalSupply(coin_market_data) {\r\n        let totalSupply = coin_market_data.total_supply && coin_market_data.total_supply.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        return <span>{totalSupply ? totalSupply : \"-\"}</span>;\r\n    }\r\n\r\n    render() {\r\n        const { currency, coin_market_data } = this.props;\r\n\r\n\r\n        return (\r\n            <table className=\"coin-info-summary\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>24h Price Change</td>\r\n                        <td>{this.getCoinPriceChange(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>24h Low/High</td>\r\n                        <td>{this.getCoin24LowHigh(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>24h Market Cap</td>\r\n                        <td>{this.getCoin24mc(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>All-Time Low/High</td>\r\n                        <td>{this.getCoinATLowHigh(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Market Cap</td>\r\n                        <td>{this.getCoinMarketcap(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Total Volume</td>\r\n                        <td>{this.getCoinTotalVolume(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Circulating Supply</td>\r\n                        <td>{this.getCoinCircSupply(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Total Supply</td>\r\n                        <td>{this.getCoinTotalSupply(coin_market_data)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Last Updated {this.getTimeZone(coin_market_data)}</td>\r\n                        <td>{this.getCoinLastUpdate(coin_market_data)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoinInfoSummary;\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/three-dots.b0504d96.svg\";","import React, { Component } from 'react';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport 'chartjs-adapter-moment';\r\n\r\n\r\nclass HistoryChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartRef = React.createRef();\r\n    }\r\n\r\n    getTimeData(data) {\r\n        return data.map(el => el[0]);\r\n    }\r\n\r\n    getValueData(data) {\r\n        return data.map(el => parseFloat(el[1]).toFixed(2));\r\n    }\r\n\r\n    getVolumeYMax(){\r\n        return Math.max(...this.props.chartPriceData.total_volumes.map(el => el[1]));\r\n    }\r\n\r\n    getPriceYMax(){\r\n        return Math.max(...this.props.chartPriceData.prices.map(el => el[1]));\r\n    }\r\n\r\n    getPriceYMin(){\r\n        return Math.min(...this.props.chartPriceData.prices.map(el => el[1]));\r\n    }\r\n\r\n    convertNumToPrice(x) {\r\n        return Number.parseFloat(x).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    createHistoryChart(){\r\n        this.myChart = new Chart(this.chartRef.current, {\r\n            data: {\r\n                labels: this.getTimeData(this.props.chartPriceData.prices),\r\n                datasets: [\r\n                {\r\n                    label: \"Price\",\r\n                    data: this.getValueData(this.props.chartPriceData.prices),\r\n                    type: 'line',\r\n                    \r\n                    backgroundColor: `${this.props.fluctuationColor}`,\r\n                    borderColor: `${this.props.fluctuationColor}`,\r\n                    borderWidth: 1,\r\n                    pointRadius: 0,\r\n                    pointHitRadius: 10,\r\n                    pointHoverRadius: 7,\r\n                    pointHoverBorderColor: 'rgba(255, 255, 255, 0.51)',\r\n                    pointHoverBorderWidth: '5',\r\n                    pointHoverBackgroundColor: `${this.props.fluctuationColor}`,\r\n                },\r\n                {\r\n                    label: \"Volume\",\r\n                    data: this.getValueData(this.props.chartPriceData.total_volumes),\r\n                    type: 'bar',\r\n\r\n                    backgroundColor: 'rgba(0, 0, 80, 0.30)',\r\n                    hoverBackgroundColor:'rgba(0, 0, 80, 0.90)', \r\n                    yAxisID: 'volume-y-axis',\r\n                    barThickness: 4,\r\n                    barPercentage: 1,\r\n                },\r\n                ]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    x: {\r\n                        ticks: {\r\n                            maxTicksLimit: 12,\r\n                        },\r\n                        grid: {\r\n                            display: false,\r\n                        },\r\n                        type: 'time',\r\n                        \r\n                        time: {\r\n                            unit: `${this.props.timeUnit}`,\r\n                        },\r\n                        \r\n                    },\r\n                    y: {\r\n                        ticks: {\r\n                            callback: function (value, index, values) {\r\n                                return `$${Number.parseFloat(value).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`;\r\n                            }\r\n                        },\r\n                        suggestedMin: `${this.getPriceYMin() - ((this.getPriceYMax() - this.getPriceYMin())*0.15)}`,\r\n                        suggestedMax: `${this.getPriceYMax() + ((this.getPriceYMax() - this.getPriceYMin())*0.05)}`,\r\n                    },\r\n                    'volume-y-axis': {\r\n                        position: 'right',\r\n                        grid: {\r\n                            display: false,\r\n                        },\r\n                        display: false,\r\n                        suggestedMax: `${this.getVolumeYMax() * 6}`,\r\n                    }\r\n                },\r\n                lineHeightAnnotation: {\r\n                    always: true,\r\n                    hover: false,\r\n                    lineWeight: 1.5\r\n                },\r\n                animation: { duration: 2000 },\r\n                maintainAspectRatio: false,\r\n                responsive: true,\r\n                plugins: {\r\n                    legend: {\r\n                        display: false,\r\n                    },\r\n                    tooltip:{\r\n                        caretSize: 0,\r\n                        callbacks:{\r\n                            label: function(context) {\r\n                                var value = context.parsed.y;\r\n                                return `$${Number.parseFloat(value).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`;\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                interaction:{\r\n                    mode:'index',\r\n                    intersect: true,\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        Chart.register(...registerables);\r\n        this.createHistoryChart();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.chartPriceData !== prevProps.chartPriceData) {\r\n            this.myChart.destroy();\r\n            this.createHistoryChart();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"history-chart\">\r\n                <canvas id=\"myChart\" ref={this.chartRef} width=\"100%\" height=\"75%\"></canvas>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryChart;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './CoinChart.css';\r\nimport './CoinPage';\r\nimport ThreeDots from './three-dots.svg';\r\nimport HistoryChart from './HistoryChart.js'\r\n\r\n\r\nclass CoinChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coinID: this.props.coinID,\r\n            currency: 'cad',\r\n            coinChartData1d: [],\r\n            coinChartData1w: [],\r\n            coinChartData1m: [],\r\n            coinChartData1y: [],\r\n            coinChartDataMax: [],\r\n            timeInterval: \"1d\",\r\n            chartLoading: true\r\n        };\r\n    }\r\n\r\n    setCoinID(coinID) {\r\n        this.setState({ coinID: coinID });\r\n    }\r\n    setCurrency(currency) {\r\n        this.setState({ currency: currency });\r\n    }\r\n    setCoinChartData(data1d, data1w, data1m, data1y, dataMax) {\r\n        this.setState({ coinChartData1d: data1d });\r\n        this.setState({ coinChartData1w: data1w });\r\n        this.setState({ coinChartData1m: data1m });\r\n        this.setState({ coinChartData1y: data1y });\r\n        this.setState({ coinChartDataMax: dataMax });\r\n    }\r\n    setTimeInterval(timeInterval) {\r\n        this.setState({ timeInterval: timeInterval });\r\n    }\r\n    setChartLoading(chartLoading) {\r\n        this.setState({ chartLoading: chartLoading });\r\n    }\r\n\r\n\r\n    fetchCoinChart() {\r\n        this.setChartLoading(true);\r\n        const requestChart1d = axios.get(`https://api.coingecko.com/api/v3/coins/${this.state.coinID}/market_chart?vs_currency=${this.state.currency}&days=1`);\r\n        const requestChart1w = axios.get(`https://api.coingecko.com/api/v3/coins/${this.state.coinID}/market_chart?vs_currency=${this.state.currency}&days=7`);\r\n        const requestChart1m = axios.get(`https://api.coingecko.com/api/v3/coins/${this.state.coinID}/market_chart?vs_currency=${this.state.currency}&days=30`);\r\n        const requestChart1y = axios.get(`https://api.coingecko.com/api/v3/coins/${this.state.coinID}/market_chart?vs_currency=${this.state.currency}&days=365`);\r\n        const requestChartMax = axios.get(`https://api.coingecko.com/api/v3/coins/${this.state.coinID}/market_chart?vs_currency=${this.state.currency}&days=max`);\r\n\r\n        axios.all([requestChart1d, requestChart1w, requestChart1m, requestChart1y, requestChartMax])\r\n            .then((res) => {\r\n                this.setCoinChartData(res[0].data, res[1].data, res[2].data, res[3].data, res[4].data);\r\n                this.setChartLoading(false);\r\n            }).catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    waitChartLoading() {\r\n        return <img width=\"10%\" src={ThreeDots} alt=\"Loading...\" />;\r\n    }\r\n\r\n    convertNumToPrice(x) {\r\n        return Number.parseFloat(x).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    convertNumToPerc(x) {\r\n        return Number.parseFloat(x).toFixed(2);\r\n    }\r\n\r\n    incDecArrow(x) {\r\n        if (x >= 0) {\r\n            return <span>&#9650;</span>;\r\n        } else {\r\n            return <span>&#9660;</span>;\r\n        }\r\n    }\r\n\r\n    getCoinPriceChange() {\r\n        let interval = this.props.coin_market_data.price_change_24h_in_currency;\r\n        let intervalPerc = this.props.coin_market_data.price_change_percentage_24h\r\n        switch (this.state.timeInterval) {\r\n            case \"1d\":\r\n                interval = this.props.coin_market_data.price_change_24h_in_currency;\r\n                intervalPerc = this.props.coin_market_data.price_change_percentage_24h;\r\n                break;\r\n            case \"1w\":\r\n                interval = this.props.coin_market_data.price_change_percentage_7d_in_currency;\r\n                intervalPerc = this.props.coin_market_data.price_change_percentage_7d;\r\n                break;\r\n            case \"1m\":\r\n                interval = this.props.coin_market_data.price_change_percentage_30d_in_currency;\r\n                intervalPerc = this.props.coin_market_data.price_change_percentage_30d;\r\n                break;\r\n            case \"1y\":\r\n                interval = this.props.coin_market_data.price_change_percentage_1y_in_currency;\r\n                intervalPerc = this.props.coin_market_data.price_change_percentage_1y;\r\n                break;\r\n            case \"max\":\r\n                interval = false;\r\n                intervalPerc = false;\r\n                break;\r\n            default:\r\n                interval = this.props.coin_market_data.price_change_24h_in_currency;\r\n                intervalPerc = this.props.coin_market_data.price_change_percentage_24h;\r\n        }\r\n\r\n        let priceChange = interval && interval.cad;\r\n        let priceChangePerc = intervalPerc;\r\n\r\n        if (priceChange && priceChangePerc) {\r\n            return <span className={priceChange >= 0 ? 'price-green' : 'price-red'}>\r\n                {this.incDecArrow(priceChange)} {this.convertNumToPrice(priceChange)}$\r\n                &nbsp;&nbsp;\r\n                {this.incDecArrow(priceChangePerc)} {this.convertNumToPerc(priceChangePerc)}%\r\n                </span>;\r\n        } else {\r\n            return <span> - &nbsp;&nbsp;  -</span>;\r\n        }\r\n    }\r\n\r\n    getIntervalChartData() {\r\n        switch (this.state.timeInterval) {\r\n            case \"1d\":\r\n                return this.state.coinChartData1d;\r\n            case \"1w\":\r\n                return this.state.coinChartData1w;\r\n            case \"1m\":\r\n                return this.state.coinChartData1m;\r\n            case \"1y\":\r\n                return this.state.coinChartData1y;\r\n            case \"max\":\r\n                return this.state.coinChartDataMax;\r\n            default:\r\n                return this.state.coinChartData1d;\r\n        }\r\n    }\r\n\r\n    getFluctuationColor() {\r\n        let interval = this.props.coin_market_data.price_change_24h_in_currency;\r\n        switch (this.state.timeInterval) {\r\n            case \"1d\":\r\n                interval = this.props.coin_market_data.price_change_24h_in_currency;\r\n                break;\r\n            case \"1w\":\r\n                interval = this.props.coin_market_data.price_change_percentage_7d_in_currency;\r\n                break;\r\n            case \"1m\":\r\n                interval = this.props.coin_market_data.price_change_percentage_30d_in_currency;\r\n                break;\r\n            case \"1y\":\r\n                interval = this.props.coin_market_data.price_change_percentage_1y_in_currency;\r\n                break;\r\n            case \"max\":\r\n                interval = false;\r\n                break;\r\n            default:\r\n                interval = this.props.coin_market_data.price_change_24h_in_currency;\r\n        }\r\n\r\n        let priceChange = interval && interval.cad;\r\n\r\n        if (priceChange < 0) {\r\n            return \"red\";\r\n        } else {\r\n            return \"green\";\r\n        }\r\n    }\r\n\r\n    getTimeUnit() {\r\n        switch (this.state.timeInterval) {\r\n            case \"1d\":\r\n                return \"hour\";\r\n            case \"1w\":\r\n                return \"day\";\r\n            case \"1m\":\r\n                return \"day\";\r\n            case \"1y\":\r\n                return \"month\";\r\n            case \"max\":\r\n                return \"month\";\r\n            default:\r\n                return \"hour\";\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCoinChart();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            (this.state.chartLoading) ?\r\n                <div className=\"coin-info-graph\">\r\n                    {this.waitChartLoading()}\r\n                </div>\r\n                :\r\n                <div className=\"coin-info-graph\">\r\n                    <div className=\"chart-header\">\r\n                        <div className=\"time-interval-selector\">\r\n                            <button\r\n                                onClick={() => this.setTimeInterval(\"1d\")}\r\n                                className={(this.state.timeInterval === \"1d\" ? \"white\" : \"\")}>\r\n                                24h\r\n                            </button>\r\n                            <button\r\n                                onClick={() => this.setTimeInterval(\"1w\")}\r\n                                className={(this.state.timeInterval === \"1w\" ? \"white\" : \"\")}>\r\n                                1w\r\n                            </button>\r\n                            <button\r\n                                onClick={() => this.setTimeInterval(\"1m\")}\r\n                                className={(this.state.timeInterval === \"1m\" ? \"white\" : \"\")}>\r\n                                1m\r\n                            </button>\r\n                            <button\r\n                                onClick={() => this.setTimeInterval(\"1y\")}\r\n                                className={(this.state.timeInterval === \"1y\" ? \"white\" : \"\")}>\r\n                                1y\r\n                            </button>\r\n                            <button\r\n                                onClick={() => this.setTimeInterval(\"max\")}\r\n                                className={(this.state.timeInterval === \"max\" ? \"white\" : \"\")}>\r\n                                max\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"price-fluctuation\">\r\n                            {this.getCoinPriceChange()}\r\n                        </div>\r\n                    </div>\r\n                    <HistoryChart\r\n                        coinID={this.state.coinID}\r\n                        chartPriceData={this.getIntervalChartData()}\r\n                        fluctuationColor={this.getFluctuationColor()}\r\n                        timeUnit={this.getTimeUnit()}\r\n                    />\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoinChart;\r\n\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './CoinPage.css';\r\nimport CoinInfoSummary from './CoinInfoSummary';\r\nimport CoinChart from './CoinChart';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nclass CoinPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coinID: '',\r\n            currency: 'cad',\r\n            coin: {},\r\n            coin_market_data: {},\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    setCoinID(coinID) {\r\n        this.setState({ coinID: coinID });\r\n    }\r\n    setCurrency(currency) {\r\n        this.setState({ currency: currency });\r\n    }\r\n    setCoin(coin) {\r\n        this.setState({ coin: coin });\r\n    }\r\n    setCoin_market_data(coin_market_data) {\r\n        this.setState({ coin_market_data: coin_market_data });\r\n    }\r\n    setLoading(loading) {\r\n        this.setState({ loading: loading });\r\n    }\r\n\r\n    fetchCoinInfo() {\r\n        this.setLoading(true);\r\n        axios.get(`https://api.coingecko.com/api/v3/coins/${this.state.coinID}?tickers=false&market_data=true&community_data=false&developer_data=false&sparkline=true`)\r\n            .then(res => {\r\n                this.setCoin(res.data);\r\n                this.setCoin_market_data(this.state.coin.market_data)\r\n                this.setLoading(false);\r\n            }).catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    convertNumToPrice(x) {\r\n        return Number.parseFloat(x).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    convertNumToPerc(x) {\r\n        return Number.parseFloat(x).toFixed(2);\r\n    }\r\n\r\n    incDecArrow(x) {\r\n        if (x >= 0) {\r\n            return <span>&#9650;</span>;\r\n        } else {\r\n            return <span>&#9660;</span>;\r\n        }\r\n    }\r\n\r\n    getCoinLogoAlt() {\r\n        return this.state.coin.name + \" Logo\";\r\n    }\r\n\r\n    getCoinSymbol() {\r\n        return (this.state.coin.symbol) ? (this.state.coin.symbol && this.state.coin.symbol.toUpperCase()) : \"-\";\r\n    }\r\n\r\n    getCoinCurrPrice() {\r\n        let current_price = this.state.coin_market_data.current_price &&\r\n            this.state.coin_market_data.current_price.cad;\r\n\r\n        return (current_price) ? this.convertNumToPrice(current_price) : \"NaN\";\r\n    }\r\n\r\n    getPriceChange24() {\r\n        let priceChange24 = this.state.coin_market_data.price_change_24h_in_currency && this.state.coin_market_data.price_change_24h_in_currency.cad;\r\n        let priceChange24Perc = this.state.coin_market_data.price_change_percentage_24h;\r\n\r\n        if (priceChange24 && priceChange24Perc) {\r\n            return <span className={priceChange24 >= 0 ? 'coin-price-change price-green' : 'coin-price-change price-red'}>\r\n                {this.incDecArrow(priceChange24)} {this.convertNumToPerc(priceChange24Perc)}%\r\n                    </span>;\r\n        } else {\r\n            return <span className=\"coin-price-change\"> - </span>;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setCoinID(this.props.match.params.cryptoid);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.coinID !== prevState.coinID) {\r\n            this.fetchCoinInfo();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                <div className=\"coin-header-container\">\r\n                    <div className=\"coin-header\">\r\n                        <div className=\"coin-title\">\r\n                            <img className=\"coin-logo\" src={this.state.coin.image && this.state.coin.image.large} alt={this.getCoinLogoAlt()} />\r\n                            <span className=\"coin-name\">{this.state.coin.name}</span>\r\n                            <span className=\"coin-symbol\">{this.getCoinSymbol()}</span>\r\n                            {this.getPriceChange24()}\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"add-watchlist\">&#x1F514; Add to Watchlist</button>                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"coin-subheader-container\">\r\n                    <div className=\"coin-subheader\">\r\n                        <span className=\"coin-currency\">CA</span>\r\n                        <span className=\"coin-price\"> {this.getCoinCurrPrice()}$</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"coin-info-container\">\r\n                    <div className=\"coin-info\">\r\n                        <CoinInfoSummary\r\n                            currency={this.state.currency}\r\n                            coin_market_data={this.state.coin_market_data}\r\n                        />\r\n                        <CoinChart\r\n                            coinID = {this.props.match.params.cryptoid}\r\n                            coin_market_data={this.state.coin_market_data}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CoinPage);\r\n","import React, { Component } from 'react';\r\nimport './Signin.css';\r\n\r\nclass Signin extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <h1>Signin</h1>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport HomePage from './components/HomePage/HomePage';\r\nimport About from './components/About/About';\r\nimport Contact from './components/Contact/Contact';\r\nimport CryptoMarket from './components/CryptoMarket/CryptoMarket';\r\nimport CoinPage from './components/CoinPage/CoinPage';\r\nimport Signin from './components/Signin/Signin';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <NavBar />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={CryptoMarket}></Route>\r\n            <Route path=\"/CryptoExchange\" component={CryptoMarket}></Route>\r\n            <Route path=\"/home\" component={HomePage}></Route>\r\n            <Route path=\"/about\" component={About}></Route>\r\n            <Route path=\"/contact\" component={Contact}></Route>\r\n            <Route path=\"/cryptomarket\" component={CryptoMarket}></Route>\r\n            <Route path=\"/coin/:cryptoid\" component={CoinPage}></Route>\r\n            <Route path=\"/signin\" component={Signin}></Route>\r\n\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}